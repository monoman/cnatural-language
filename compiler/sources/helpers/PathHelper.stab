/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
 */
using java.lang;

package stab.tools.helpers {

	public static class PathHelper {
		public final static char DIRECTORY_SEPARATOR_CHAR;
		public final static char ALT_DIRECTORY_SEPARATOR_CHAR;
		private final static char VOLUME_SEPARATOR_CHAR;
		
		static PathHelper() {
			DIRECTORY_SEPARATOR_CHAR = System.getProperty("file.separator")[0];
			ALT_DIRECTORY_SEPARATOR_CHAR = (DIRECTORY_SEPARATOR_CHAR == '/') ? '\\' : '/';
			VOLUME_SEPARATOR_CHAR = (System.getProperty("path.separator")[0] == ';') ? ':' : (char)0;
		}

		public static String getDirectoryName(String path) {
			if (path != null) {
				int index = path.lastIndexOf(DIRECTORY_SEPARATOR_CHAR);
				int index2 = path.lastIndexOf(ALT_DIRECTORY_SEPARATOR_CHAR);
				if (index2 > index) {
					index = index2;
				}
				if (index != -1) {
					if (index == path.length() - 1) {
						if (path.indexOf(VOLUME_SEPARATOR_CHAR) == index - 1) {
							return null;
						} else {
							path = path.substring(0, index);
						}
					} else {
						if (path.indexOf(VOLUME_SEPARATOR_CHAR) == index - 1) {
							path = path.substring(0, index + 1);
						} else {
							path = path.substring(0, index);
						}
					}
					if (path.length() == 2 && path[1] == VOLUME_SEPARATOR_CHAR) {
						return "";
					}
				}
				return path;
			}
			return null;
		}

		public static String getFileName(String path) {
			if (path != null) {
				int index = path.lastIndexOf(DIRECTORY_SEPARATOR_CHAR);
				if (index == -1) {
					index = path.lastIndexOf(ALT_DIRECTORY_SEPARATOR_CHAR);
				}
				if (index == -1) {
					return path;
				}
				return path.substring(index + 1);
			}
			return null;
		}

		public static String getFileNameWithoutExtension(String path) {
			if (path != null) {
				int index = path.lastIndexOf(DIRECTORY_SEPARATOR_CHAR);
				if (index == -1) {
					index = path.lastIndexOf(ALT_DIRECTORY_SEPARATOR_CHAR);
				}
				if (index != -1) {
					path = path.substring(index + 1);
				}
				index = path.lastIndexOf('.');
				if (index == -1) {
					return path;
				}
				return path.substring(0, index);
			}
			return null;
		}

		public static String getExtension(String path) {
			if (path != null) {
				int index = path.lastIndexOf('.');
				if (index == -1) {
					return "";
				}
				return path.substring(index);
			}
			return null;
		}

		public static boolean hasExtension(String path) {
			int index = path.lastIndexOf('.');
			if (index == -1) {
				return false;
			}
			return (index + 1) != path.length();
		}

		public static String combine(String path1, String path2) {
			if (path1 == null) {
				throw new NullPointerException("path1");
			}
			if (path2 == null) {
				throw new NullPointerException("path2");
			}
			if (path1.length() == 0) {
				return path2;
			}
			if (path2.length() == 0) {
				return path1;
			}
			if (path2.length() > 2 && path2[1] == VOLUME_SEPARATOR_CHAR) {
				return path2;
			}
			var path1LastChar = path1[path1.length() - 1];
			var path2LastChar = path2[0];
			if (path1LastChar == DIRECTORY_SEPARATOR_CHAR
					|| path1LastChar == ALT_DIRECTORY_SEPARATOR_CHAR
					|| path1LastChar == VOLUME_SEPARATOR_CHAR
					|| path2LastChar == DIRECTORY_SEPARATOR_CHAR
					|| path2LastChar == ALT_DIRECTORY_SEPARATOR_CHAR)
			{
				return path1 + path2;
			} else {
				return path1 + DIRECTORY_SEPARATOR_CHAR + path2;
			}
		}
	}
}
