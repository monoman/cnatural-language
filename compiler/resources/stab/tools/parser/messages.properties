AccessorExpected = Accessor expected
ArrayTypeExpected = Array type expected
AssignExpected = = expected
ByExpected = ''by'' expected
ClassInterfaceEnumExpected = ''class'', ''interface'' or ''enum'' expected
ClassInterfaceEnumDelegateExpected = ''class'', ''interface'', ''enum'' or ''delegate'' expected
CloseBraceExpected = } expected
CloseBracketExpected = ] expected
CloseParenthesisExpected = ) expected
ColonExpected = : expected
CommaExpected = , expected
DecimalDigitsExpected = Decimal digits expected
DotExpected = . expected
DuplicateAccessor = Duplicate accessor
DuplicateModifier = Duplicate ''{0}'' modifier
EndifExpected = ''endif'' expected
EndregionExpected = ''endregion'' expected
EqualsExpected = ''equals'' expected
ErrorDiagnostic = #error: ''{0}''
FinallyExpected = ''finally'' expected
GreaterThanExpected = > expected
HexadecimalDigitExpected = Hexadecimal digit expected
IdentifierExpected = Identifier expected
InExpected = ''in'' expected
InvalidEscapeSequence = Invalid escape sequence
InvalidNumber = Invalid number
InvalidPreprocessorChar = Unexpected character during preprocessing
InvalidSourceCodeChar = Unexpected character
InternalError = Parsing internal error
MalformedChar = Malformed literal character
MalformedHexadecimalNumber = Malformed hexadecimal number
MalformedPreprocessorDirective = Malformed preprocessor directive
MisplacedNumberSign = Misplaced #
NameOrMemberAccessExpected = Name or member access expected
NewLineExpected = New line expected
NoPackageMembers = A package does not directly contain members such as fields or methods
OnExpected = ''on'' expected
OpenBraceExpected = { expected
OpenBracketExpected = [ expected
OpenParenthesisExpected = ( expected
PackageWithModifiers = A package declaration cannot have modifiers
PreprocessorSymbolExpected = Preprocessor symbol expected after #
ReturnOrBreakExpected = ''return'' or ''break'' expected
SelectOrGroupExpected = ''select'' or ''group'' expected
SemiColonExpected = ; expected
SimpleNameExpected = Name expected
SuperOrThisExpected = ''super'' or ''this'' expected
TypeExpected = Type expected
UnclosedChar = Missing literal character closing ''
UnclosedDelimitedComment = Comment end marker ''*/'' not found
UnclosedFilename = Missing file name closing "
UnclosedString = Missing literal string closing "
UnclosedVerbatimString = Missing verbatim string closing "
UnexpectedEndOfStream = Unexpected end of stream
UnexpectedLabeledStatement = Unexpected labeled statement
UnexpectedLexicalUnit = Unexpected lexical unit
UnexpectedVariableDeclaration = Unexpected variable declaration
UnexpectedVoid = Cannot use ''void'' in this context
WarningDiagnostic = #warning: ''{0}''
WarningExpected = ''warning'' expected
WhileExpected = ''while'' expected
WhitespaceExpected = Whitespace expected
WildcardExpected = ? expected
